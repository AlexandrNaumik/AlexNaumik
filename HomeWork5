import java.util.Arrays;

public class IntArray {
    private int[] array;

    public IntArray(int size) {
        this.array = new int[size];
    }

    public IntArray(int[] values) {
        this.array = values;
    }

    public IntArray() {
        this.array = new int[10];
    }

    public void sort(int number) {
        int i;
        int j;
        int t;
        if (number > 0) {
            for(i = 0; i < this.array.length; ++i) {
                for(j = 0; j < this.array.length - i - 1; ++j) {
                    if (this.array[j] > this.array[j + 1]) {
                        t = this.array[j];
                        this.array[j] = this.array[j + 1];
                        this.array[j + 1] = t;
                    }
                }
            }
        } else {
            for(i = 0; i < this.array.length; ++i) {
                for(j = 0; j < this.array.length - i - 1; ++j) {
                    if (this.array[j] < this.array[j + 1]) {
                        t = this.array[j];
                        this.array[j] = this.array[j + 1];
                        this.array[j + 1] = t;
                    }
                }
            }
        }

        System.out.println(Arrays.toString(this.array));
    }

    public void addElement(int value, int i) {
        this.array[i] = value;
    }

    public int getElement(int i) {
        return this.array[i];
    }

    public int[] getArray() {
        return this.array;
    }

    public int getNumber() {
        return 0;
    }

public class Phone {
    private long number;
    private String model;
    private int weight;

    public Phone() {
    }

    public Phone(long number, String model, int weight) {
        this(number, model);
        this.weight = weight;
    }

    public Phone(long number, String model) {
        this.number = number;
        this.model = model;
    }

    public long getNumber() {
        return this.number;
    }

    public void setNumber(long number) {
        this.number = number;
    }

    public String getModel() {
        return this.model;
    }

    public void setModel(String model) {
        this.model = model;
    }

    public int getWeight() {
        return this.weight;
    }

    public void setWeight(int weight) {
        this.weight = weight;
    }

    public void receiveCall(String name) {
        System.out.println("Звонит  " + name);
    }

    public void receiveCall(String name, long number) {
        System.out.println("Звонит  " + name + " номер телефона " + number);
    }

    public static void sendMessage(long... numbers) {
        for(int i = 0; i < numbers.length; ++i) {
            System.out.println("номер телефона  " + i + ": " + numbers[i]);
        }

    }
}

public Task1() {
    }

    public static void main(String[] args) {
        Phone p1 = new Phone();
        p1.setNumber(2892595L);
        p1.setModel("Samsung");
        p1.setWeight(320);
        Phone p2 = new Phone(9379992L, "Sony");
        p2.setWeight(438);
        Phone p3 = new Phone(7930829L, "iPhone", 290);
        printPhone(p1);
        printPhone(p2);
        printPhone(p3);
        p1.receiveCall("Александр");
        p2.receiveCall("Артем");
        p3.receiveCall("Ирина");
        p1.receiveCall("Александр", 3147896L);
        p2.receiveCall("Артем", 3154785L);
        p3.receiveCall("Ирина", 7930852L);
        System.out.println("Номер телефона  " + p1.getNumber());
        System.out.println("Номер телефона  " + p2.getNumber());
        System.out.println("Номер телефона  " + p3.getNumber());
        Phone.sendMessage(new long[]{3147896L, 7242878L, 7522L, 7788L, 6161616L});
    }

    private static void printPhone(Phone phone) {
        System.out.println("Номер телефона  " + phone.getNumber());
        System.out.println("Модель телефона  " + phone.getModel());
        System.out.println("Вес телефона   " + phone.getWeight());
    }
}

public class Task2 {
    public Task2() {
    }

    public static void main(String[] args) {
        IntArray y = new IntArray();
        y.addElement(10, 0);
        y.addElement(14, 1);
        y.addElement(18, 2);
        y.addElement(20, 3);
        y.addElement(25, 4);
        printArray(y.getArray());
        int[] array = new int[]{1, 25, 6, 12, 38, 41, 7, 58, 23, 99, 1000};
        IntArray x = new IntArray(array);
        x.sort(1);
        x.sort(-1);
    }

    private static void printArray(int[] array) {
        System.out.println(Arrays.toString(array));
    }
}


